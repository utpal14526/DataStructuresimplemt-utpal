#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const int N=1e5+4;
int arr[N],tree[4*N];

void build(int node,int st,int en){
    if(st==en){
        tree[node]=arr[en];
        return;
    }

    int mid=st+(en-st)/2;
    build(2*node+1,st,mid);
    build(2*node+2,mid+1,en);

    tree[node]=tree[2*node+1]+tree[2*node+2];
}

int ans(int l,int r,int st,int en,int node){

     //think of it .
    if(en<l ||  st>r){
        return 0;
    }
  
    if(l<=st && en<=r){
        return tree[node];
    }

    int mid=st+(en-st)/2;
    int p1=ans(l,r,st,mid,2*node+1);
    int p2=ans(l,r,mid+1,en,2*node+2);
    return p1+p2;

}  //query answer 

int main(){
    int m;
    cin>>m;
    for(int i=0;i<m;i++){
        cin>>arr[i];
    }
    
    build(0,0,m-1);//building a segment tree..
    cout<<"ENTER QUERY";
    int q;
    cin>>q;
    while(q--){
        int a,b;
        cin>>a>>b;
        //assuming a and b are 1 based
        a--;
        b--;

        cout<<ans(a,b,0,m-1,0);
    }
}
